---

- name: Template warewulf.conf
  ansible.builtin.template:
        src: warewulf.conf.j2
        dest: "{{ ww4_config_prefix }}/etc/warewulf/warewulf.conf"
  tags: ['configure']

- name: ensure rsync is present
  ansible.builtin.dnf:
      name: rsync
      state: present

- name: Copy system2site overlays to allow overlay editing
  ansible.posix.synchronize:
    recursive: true
    src: /share/warewulf/overlays/{{ item }}
    dest: /var/warewulf/overlays/
  delegate_to: "{{ inventory_hostname }}"
  with_items:
    - fstab
    - NetworkManager
    - ssh.authorized_keys

- name: Modify fstab overlay to include the contents of /etc/fstab from the container
  ansible.builtin.blockinfile:
    path: "{{ ww4_warewulf4_path }}/overlays/fstab/rootfs/etc/fstab.ww"
    block: |
      # Begining of container /etc/fstab contents
      {{ '{{IncludeFrom $.Container "/etc/fstab"}}' }}
      # End of container /etc/fstab contents
    marker: "# {mark} ANSIBLE MANAGED BLOCK (fstab overlay)"

- name: Modify generic overlay to make /root/ not world readable
  ansible.builtin.command:
    cmd: "wwctl overlay chmod ssh.authorized_keys {{ item }}"
  with_items:
    - "/root/ 750"
    - "/root/.ssh/ 750"
    - "/root/.ssh/authorized_keys.ww 640"

#- name: Modify host overlay to disable the range in dhcpd.conf
#  ansible.builtin.lineinfile:
#    path: "{{ ww4_warewulf4_path }}/overlays/host/rootfs/etc/dhcp/dhcpd.conf.ww"
#    insertafter: "{% raw %}subnet {{$.Network}} netmask {{$.Netmask}} {{% endraw %}"
#    line: "#ansible-commented-out {{ item }}"   # Comment out with leading "#"
#    regexp: "{{ item | regex_escape }}"  # match the right line
#    state: present
#  with_items:
#    - "{% raw %}range {{$.Dhcp.RangeStart}} {{$.Dhcp.RangeEnd}};{% endraw %}"
#  when: not WW4_dhcp_answer_all

- name: Disable ipv6 from NetworkManager configs
  ansible.builtin.lineinfile:
    path: "{{ ww4_warewulf4_path }}/overlays/NetworkManager/rootfs/etc/NetworkManager/system-connections/ww4-managed.ww"
    regexp: '^method=ignore$'
    line: 'method=disabled'
    state: present
  when: disable_ipv6

- name: workaround a bug in ww4, need symlinks in /share/ipxe
  block:
  - name: Find files in /usr/share/ipxe/
    ansible.builtin.find:
      paths: /usr/share/ipxe/
    register: ipxe_files

  - name: Create symbolic links in /share/ipxe/
    ansible.builtin.file:
      src: "{{ item.path }}"
      dest: "/share/ipxe/{{ item.path | basename }}"
      state: link
    with_items: "{{ ipxe_files.files }}"

- name: configure ww4 subsystems one by one with wwctl configure item
  ansible.builtin.command:
    cmd: "wwctl configure {{ item }}"
  register: wwctl_configure_output
  failed_when: wwctl_configure_output.stderr.find('ERROR') != -1
  loop:
    - dhcp
    - hostfile
    - nfs
    - ssh
    - tftp
  tags: ['configure','notest']

- name: start and enable warewulfd with systemd
  ansible.builtin.systemd:
    state:   restarted
    enabled: true
    name:    warewulfd
  tags: ['configure','notest']
